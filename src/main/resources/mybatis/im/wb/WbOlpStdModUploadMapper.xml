<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qtech.im.wb.mapper.WbOlpStdModUploadMapper">

    <resultMap type="WbOlpStdModDetail" id="WbOlpStdModelDetailResult">
        <result property="mcId"    column="mc_id"    />
        <result property="lineNo"    column="line_no"    />
        <result property="leadX"    column="lead_x"    />
        <result property="leadY"    column="lead_y"    />
        <result property="padX"    column="pad_x"    />
        <result property="padY"    column="pad_y"    />
        <result property="leadDiff"    column="lead_diff"    />
        <result property="padDiff"    column="pad_diff"    />
        <result property="wireLen"    column="wire_len"    />
    </resultMap>

    <resultMap id="WbOlpStdModUploadResult" type="WbOlpStdModUpload">
        <result property="simId" column="sim_id" />
        <result property="mcId"  column="mc_id" />
        <result property="dt"  column="dt" />
        <result property="lineNo"  column="line_no" />
        <result property="leadX"  column="lead_x" />
        <result property="leadY"  column="lead_y" />
        <result property="padX"  column="pad_x" />
        <result property="padY"  column="pad_y" />
        <result property="leadDiff" column="lead_diff" />
        <result property="padDiff"  column="pad_diff" />
        <result property="wireLen"  column="wire_len" />
        <result property="checkPort"  column="check_port" />
        <result property="pId"  column="pieces_index" />
    </resultMap>

    <sql id="selectWbOlpStdModUploadVo">
        select sim_id, mc_id, dt, line_no, lead_x, lead_y, pad_x, pad_y, check_port, pieces_index from qtech_eq_dwd.im_wb_olp_coordinate_detail
    </sql>

    <select id="selectWbOlpStdModUploadList" resultMap="WbOlpStdModUploadResult">
        select sim_id,
            mc_id,
            dt,
            line_no,
            lead_x,
            lead_y,
            pad_x,
            pad_y,
            if (lead_x_lag is null, null, round(sqrt(power(cast(lead_x as double) - cast(lead_x_lag as double), 2) +
                power(cast(lead_y as double) - cast(lead_y_lag as double), 2)), 2)) as lead_diff,
            if (lead_x_lag is null, null, round(sqrt(power(cast(pad_x as double) - cast(pad_x_lag as double), 2) +
                power(cast(pad_y as double) - cast(pad_y_lag as double), 2)), 2)) as pad_diff,
            round(sqrt(power(cast(lead_x as double) - cast(pad_x as double), 2) +
                power(cast(lead_y as double) - cast(pad_y as double), 2)), 2) as wire_len,
            check_port,
            pieces_index
        from (
            select sim_id,
                mc_id,
                dt,
                line_no,
                lead_x,
                lead_y,
                pad_x,
                pad_y,
                check_port,
                pieces_index,
                lag(lead_x, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as lead_x_lag,
                lag(lead_y, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as lead_y_lag,
                lag(pad_x, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as pad_x_lag,
                lag(pad_y, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as pad_y_lag
            from qtech_eq_dwd.im_wb_olp_coordinate_detail
        <where>
            <if test="params.beginCreateDate != null and params.beginCreateDate != '' and params.endCreateDate != null and params.endCreateDate != ''">
                and dt between #{params.beginCreateDate} and #{params.endCreateDate}
            </if>
        </where>) a
        <where>
            <if test="mcId != null and mcId !=''">and mc_id like concat('%',  #{mcId}, '%')</if>
            <if test="simId != null and simId != ''">and sim_id = #{simId}</if>
            <if test="pId != null and pId != ''">and pieces_index = #{pId}</if>
        </where>
        order by mc_id asc, dt asc, line_no asc
    </select>

    <select id="selectWbOlpStdModUploadMockList" resultMap="WbOlpStdModelDetailResult">
        select mc_id,
               row_number() over(partition by sim_id, pieces_index order by line_no asc) as line_no,
               lead_x,
               lead_y,
               pad_x,
               pad_y,
               sqrt(power(cast(lead_x as double) - cast(lead_x_lag as double), 2) +
                         power(cast(lead_y as double) - cast(lead_y_lag as double), 2)) as lead_diff,
               sqrt(power(cast(pad_x as double) - cast(pad_x_lag as double), 2) +
                         power(cast(pad_y as double) - cast(pad_y_lag as double), 2))   as pad_diff,
               sqrt(power(cast(lead_x as double) - cast(pad_x as double), 2) +
                         power(cast(lead_y as double) - cast(pad_y as double), 2))      as wire_len
        from (
             select sim_id,
                    mc_id,
                    line_no,
                    lead_x,
                    lead_y,
                    pad_x,
                    pad_y,
                    check_port,
                    pieces_index,
                    lag(lead_x, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as lead_x_lag,
                    lag(lead_y, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as lead_y_lag,
                    lag(pad_x, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as pad_x_lag,
                    lag(pad_y, 1, null) over(partition by sim_id, pieces_index order by line_no asc) as pad_y_lag
             from qtech_eq_dwd.im_wb_olp_coordinate_detail
        <where>
            sim_id != "ADEFAULT"
            <if test="mcId != null and mcId != ''"> and mc_id like concat('%', #{mcId}, '%') </if>
            <if test="simId != null and simId != ''"> and sim_id = #{simId} </if>
            <if test="pId != null and pId != ''"> and pieces_index = #{pId} </if>
            <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
                and dt between #{beginTime} and #{endTime}
            </if>
            <if test="delLineNoList.size != 0">
                and line_no not in
                <foreach collection="delLineNoList" index="index" item="delLineNoList" open="(" separator="," close=")">
                    #{delLineNoList}
                </foreach>
            </if>
        </where>) a
        order by mc_id asc, line_no asc
    </select>

</mapper>
